# Generated by Django 4.2.2 on 2023-06-10 17:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ContentViewMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content_option", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "content_view_master",
            },
        ),
        migrations.CreateModel(
            name="CountryMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "country_master",
            },
        ),
        migrations.CreateModel(
            name="LanguageMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("language_code", models.CharField(max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "language_master",
            },
        ),
        migrations.CreateModel(
            name="SocialMediaMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "social_media_master",
            },
        ),
        migrations.CreateModel(
            name="SortOptionsMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sort_option", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "sort_options_master",
            },
        ),
        migrations.CreateModel(
            name="SubscriptionsMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plan_name", models.CharField(max_length=100)),
                ("plan_cost", models.CharField(max_length=100)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "subscriptions_master",
            },
        ),
        migrations.CreateModel(
            name="TrophyMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "trophy_master",
            },
        ),
        migrations.CreateModel(
            name="UserTrophyCase",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "trophy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.trophymaster",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_trophy_case",
            },
        ),
        migrations.CreateModel(
            name="UserSubscriptionsDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subscription_start_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "subscription_end_date",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "subscription_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.subscriptionsmaster",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_subscriptions_details",
            },
        ),
        migrations.CreateModel(
            name="UserSocialLink",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("social_media", models.CharField(max_length=500)),
                ("link", models.CharField(max_length=1024)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_social_link",
            },
        ),
        migrations.CreateModel(
            name="UserSettingDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "avatar_link",
                    models.CharField(blank=True, max_length=1024, null=True),
                ),
                (
                    "cover_link",
                    models.CharField(blank=True, max_length=1024, null=True),
                ),
                ("online_status", models.BooleanField(default=False)),
                ("dark_mode", models.BooleanField(default=False)),
                (
                    "gender",
                    models.CharField(
                        choices=[
                            ("man", "Man"),
                            ("woman", "Woman"),
                            ("prefer_not_to_say", "Prefer Not to Say"),
                            ("custom", "I Refer to Myself As"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "custom_gender",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("allow_beta_tests", models.BooleanField(default=False)),
                ("opt_out_of_redesign", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.countrymaster",
                    ),
                ),
                (
                    "display_language",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.languagemaster",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_setting_details",
            },
        ),
        migrations.CreateModel(
            name="UserProfileDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "display_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "about",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("is_nsfw", models.BooleanField(default=False)),
                ("allow_profile_follow", models.BooleanField(default=True)),
                ("allow_visibility", models.BooleanField(default=True)),
                (
                    "allow_community_visibility",
                    models.BooleanField(default=True),
                ),
                ("allow_search_visibility", models.BooleanField(default=True)),
                (
                    "allow_personalize_outbound_link",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_personalize_ads_activity",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_personalize_ads_partner_info",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_personalize_ads_partner_activity",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_personalize_recomm_location",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_personalize_recomm_partner_activity",
                    models.BooleanField(default=True),
                ),
                ("allow_2FA", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_profile_details",
            },
        ),
        migrations.CreateModel(
            name="UserNotificationSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("allow_inbox_messages", models.BooleanField(default=True)),
                ("allow_chat_messages", models.BooleanField(default=True)),
                ("allow_chat_requests", models.BooleanField(default=True)),
                (
                    "allow_mentions_of_username",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_comments_user_posts",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_upvotes_on_user_posts",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_replies_to_user_comments",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_activity_on_user_comments",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_activity_on_user_threads",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_activity_on_user_chat_posts",
                    models.BooleanField(default=True),
                ),
                ("allow_new_followers", models.BooleanField(default=True)),
                ("allow_new_post_flair", models.BooleanField(default=True)),
                ("allow_new_user_flair", models.BooleanField(default=True)),
                ("allow_pinned_posts", models.BooleanField(default=True)),
                (
                    "allow_awards_user_receive",
                    models.BooleanField(default=True),
                ),
                ("allow_posts_user_follow", models.BooleanField(default=True)),
                (
                    "allow_comments_user_follow",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_reddit_talk_in_user_comm",
                    models.BooleanField(default=True),
                ),
                ("allow_trending_posts", models.BooleanField(default=True)),
                (
                    "allow_broadcast_recommendations",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_community_recommendations",
                    models.BooleanField(default=True),
                ),
                ("allow_rereddit", models.BooleanField(default=True)),
                (
                    "allow_reddit_announcements",
                    models.BooleanField(default=True),
                ),
                ("allow_cake_day", models.BooleanField(default=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_notification_settings",
            },
        ),
        migrations.CreateModel(
            name="UserLoginDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "device_id",
                    models.CharField(blank=True, default="", max_length=255),
                ),
                (
                    "platform",
                    models.CharField(blank=True, default="", max_length=32),
                ),
                (
                    "notification_id",
                    models.CharField(blank=True, default="", max_length=2054),
                ),
                (
                    "ip_address",
                    models.CharField(blank=True, default="", max_length=128),
                ),
                (
                    "login_time",
                    models.CharField(blank=True, default="", max_length=256),
                ),
                (
                    "logout_time",
                    models.CharField(blank=True, default="", max_length=256),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="auth_user",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="auth user table",
                    ),
                ),
            ],
            options={
                "db_table": "user_login_details",
            },
        ),
        migrations.CreateModel(
            name="UserFeedSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("allow_nsfw", models.BooleanField(default=False)),
                ("blur_nsfw", models.BooleanField(default=False)),
                ("allow_home_feed_recomm", models.BooleanField(default=True)),
                ("allow_autoplay_media", models.BooleanField(default=True)),
                (
                    "allow_reduce_animations",
                    models.BooleanField(default=False),
                ),
                ("allow_community_themes", models.BooleanField(default=True)),
                ("remember_sort_per_comm", models.BooleanField(default=False)),
                (
                    "remember_content_view_per_comm",
                    models.BooleanField(default=False),
                ),
                ("open_post_in_new_tab", models.BooleanField(default=False)),
                ("markdown_default", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "community_content_sort",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.sortoptionsmaster",
                    ),
                ),
                (
                    "global_content_view",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.contentviewmaster",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_feed_settings",
            },
        ),
        migrations.CreateModel(
            name="UserEmailSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("allow_inbox_messages", models.BooleanField(default=True)),
                ("allow_chat_requests", models.BooleanField(default=True)),
                ("new_user_welcome", models.BooleanField(default=False)),
                (
                    "allow_comments_on_user_posts",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_replies_to_user_comments",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_upvotes_on_user_posts",
                    models.BooleanField(default=True),
                ),
                (
                    "allow_upvotes_on_user_comments",
                    models.BooleanField(default=True),
                ),
                ("allow_username_mentions", models.BooleanField(default=True)),
                ("allow_new_followers", models.BooleanField(default=True)),
                ("allow_daily_digest", models.BooleanField(default=False)),
                ("allow_weekly_recap", models.BooleanField(default=False)),
                (
                    "allow_community_discovery",
                    models.BooleanField(default=False),
                ),
                ("unsubscribe_all", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_email_settings",
            },
        ),
        migrations.CreateModel(
            name="UserContentLanguages",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "language",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.languagemaster",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_content_languages",
            },
        ),
        migrations.CreateModel(
            name="UserBlockList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "blocked_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="blocked_users",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "user_block_list",
            },
        ),
        migrations.CreateModel(
            name="ResetTokenLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "token",
                    models.CharField(blank=True, default="", max_length=500),
                ),
                ("is_expired", models.BooleanField(default=False)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "reset_token_log",
            },
        ),
        migrations.CreateModel(
            name="CommunityMuteList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subreddit", models.CharField(max_length=1024)),
                ("is_active", models.BooleanField(default=True)),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "community_mute_list",
            },
        ),
        migrations.AddConstraint(
            model_name="userblocklist",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("user", models.F("blocked_user")), _negated=True
                ),
                name="user_not_equal_blocked_user",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="userblocklist",
            unique_together={("user", "blocked_user")},
        ),
    ]
